{"version":3,"sources":["App.js","index.js"],"names":["App","useState","result","setResult","display","setDisplay","n1","setN1","n2","setN2","equal","setEqual","operation","setOperation","useEffect","String","Number","className","onClick","split","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe9eae2a.chunk.js","sourcesContent":["import react from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  let [result, setResult] = useState(\"\");\n  let [display, setDisplay] = useState(\"0\");\n  let [n1, setN1] = useState(\"\");\n  let [n2, setN2] = useState(\"\");\n  let [equal, setEqual] = useState(\"\");\n  let [operation, setOperation] = useState(\"\");\n\n  let final = useEffect(() => {\n    if (equal == \"=\") {\n      setOperation(\"\");\n      setN2(\"\");\n      setEqual(\"\");\n      setN1(result);\n    }\n  });\n  let ecran = useEffect(() => {\n    if (operation == \"\" && n1 != \"\" && n2 == \"\" && equal == \"\") {\n      setDisplay(n1);\n    }\n    if (operation != \"\" && n1 != \"\" && n2 == \"\" && equal == \"\") {\n      setDisplay(operation);\n    }\n    if (operation != \"\" && n1 != \"\" && n2 != \"\" && equal == \"\") {\n      setDisplay(n2);\n    }\n    if (operation != \"\" && n1 != \"\" && n2 != \"\" && equal == \"=\") {\n      setDisplay(result);\n    }\n  });\n\n  let math = useEffect(() => {\n    if (operation == \"+\" && n1 != \"\" && n2 != \"\") {\n      setResult(String(Number(n1) + Number(n2)));\n    }\n    if (operation == \"-\" && n1 != \"\" && n2 != \"\") {\n      setResult(String(Number(n1) - Number(n2)));\n    }\n    if (operation == \"x\" && n1 != \"\" && n2 != \"\") {\n      setResult(String(Number(n1) * Number(n2)));\n    }\n    if (operation == \"/\" && n1 != \"\" && n2 != \"\") {\n      setResult(String(Number(n1) / Number(n2)));\n    }\n\n    if (operation == \"R\") {\n      setResult(\"\");\n      setOperation(\"\");\n      setN2(\"\");\n      setEqual(\"\");\n      setN1(\"\");\n      setDisplay(\"0\");\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"calculator\">\n        <div className=\"display\">\n          <div className=\"content\">{display}</div>\n          <button\n            className=\"pct\"\n            onClick={() => {\n              if (n1 == \"\") {\n                setN1(\"0.\");\n              }\n              if (display == n1 && !n1.split(\"\").includes(\".\")) {\n                setN1(n1 + \".\");\n              }\n              if (display == n2 && !n2.split(\"\").includes(\".\")) {\n                setN2(n2 + \".\");\n              }\n            }}\n          >\n            .\n          </button>\n        </div>\n        <div className=\"buttons\">\n          <div className=\"numbers\">\n            <button\n              onClick={() => {\n                if (operation == \"\" && n1 == \"\") {\n                  setN1(\"9\");\n                } else if (operation == \"\" && n1 != \"\") {\n                  setN1(n1 + 9);\n                }\n                if (operation != \"\" && n1 !== \"\") {\n                  setN2(\"9\");\n                }\n                if (display == n2 && equal == \"\") {\n                  setN2(n2 + 9);\n                }\n                if (display == n2 && equal == \"\" && n2 == \"0\") {\n                  setN2(n2 + \".\" + 9);\n                }\n              }}\n            >\n              9\n            </button>\n            <button\n              onClick={() => {\n                if (operation == \"\" && n1 == \"\") {\n                  setN1(\"8\");\n                } else if (operation == \"\" && n1 != \"\") {\n                  setN1(n1 + 8);\n                }\n                if (operation != \"\" && n1 !== \"\") {\n                  setN2(\"8\");\n                }\n                if (display == n2 && equal == \"\") {\n                  setN2(n2 + 8);\n                }\n                if (display == n2 && equal == \"\" && n2 == \"0\") {\n                  setN2(n2 + \".\" + 8);\n                }\n              }}\n            >\n              8\n            </button>\n            <button\n              onClick={() => {\n                if (operation == \"\" && n1 == \"\") {\n                  setN1(\"7\");\n                } else if (operation == \"\" && n1 != \"\") {\n                  setN1(n1 + 7);\n                }\n                if (operation != \"\" && n1 !== \"\") {\n                  setN2(\"7\");\n                }\n                if (display == n2 && equal == \"\") {\n                  setN2(n2 + 7);\n                }\n                if (display == n2 && equal == \"\" && n2 == \"0\") {\n                  setN2(n2 + \".\" + 7);\n                }\n              }}\n            >\n              7\n            </button>\n            <button\n              onClick={() => {\n                if (operation == \"\" && n1 == \"\") {\n                  setN1(\"6\");\n                } else if (operation == \"\" && n1 != \"\") {\n                  setN1(n1 + 6);\n                }\n                if (operation != \"\" && n1 !== \"\") {\n                  setN2(\"6\");\n                }\n                if (display == n2 && equal == \"\") {\n                  setN2(n2 + 6);\n                }\n                if (display == n2 && equal == \"\" && n2 == \"0\") {\n                  setN2(n2 + \".\" + 6);\n                }\n              }}\n            >\n              6\n            </button>\n            <button\n              onClick={() => {\n                if (operation == \"\" && n1 == \"\") {\n                  setN1(\"5\");\n                } else if (operation == \"\" && n1 != \"\") {\n                  setN1(n1 + 5);\n                }\n                if (operation != \"\" && n1 !== \"\") {\n                  setN2(\"5\");\n                }\n                if (display == n2 && equal == \"\") {\n                  setN2(n2 + 5);\n                }\n                if (display == n2 && equal == \"\" && n2 == \"0\") {\n                  setN2(n2 + \".\" + 5);\n                }\n              }}\n            >\n              5\n            </button>\n            <button\n              onClick={() => {\n                if (operation == \"\" && n1 == \"\") {\n                  setN1(\"4\");\n                } else if (operation == \"\" && n1 != \"\") {\n                  setN1(n1 + 4);\n                }\n                if (operation != \"\" && n1 !== \"\") {\n                  setN2(\"4\");\n                }\n                if (display == n2 && equal == \"\") {\n                  setN2(n2 + 4);\n                }\n                if (display == n2 && equal == \"\" && n2 == \"0\") {\n                  setN2(n2 + \".\" + 4);\n                }\n              }}\n            >\n              4\n            </button>\n            <button\n              onClick={() => {\n                if (operation == \"\" && n1 == \"\") {\n                  setN1(\"3\");\n                } else if (operation == \"\" && n1 != \"\") {\n                  setN1(n1 + 3);\n                }\n                if (operation != \"\" && n1 !== \"\") {\n                  setN2(\"3\");\n                }\n                if (display == n2 && equal == \"\") {\n                  setN2(n2 + 3);\n                }\n                if (display == n2 && equal == \"\" && n2 == \"0\") {\n                  setN2(n2 + \".\" + 3);\n                }\n              }}\n            >\n              3\n            </button>\n            <button\n              onClick={() => {\n                if (operation == \"\" && n1 == \"\") {\n                  setN1(\"2\");\n                } else if (operation == \"\" && n1 != \"\") {\n                  setN1(n1 + 2);\n                }\n                if (operation != \"\" && n1 !== \"\") {\n                  setN2(\"2\");\n                }\n                if (display == n2 && equal == \"\") {\n                  setN2(n2 + 2);\n                }\n                if (display == n2 && equal == \"\" && n2 == \"0\") {\n                  setN2(n2 + \".\" + 2);\n                }\n              }}\n            >\n              2\n            </button>\n            <button\n              onClick={() => {\n                if (operation == \"\" && n1 == \"\") {\n                  setN1(\"1\");\n                } else if (operation == \"\" && n1 != \"\") {\n                  setN1(n1 + 1);\n                }\n                if (operation != \"\" && n1 !== \"\") {\n                  setN2(\"1\");\n                }\n                if (display == n2 && equal == \"\") {\n                  setN2(n2 + 1);\n                }\n                if (display == n2 && equal == \"\" && n2 == \"0\") {\n                  setN2(n2 + \".\" + 1);\n                }\n              }}\n            >\n              1\n            </button>\n\n            <button onClick={() => setOperation(\"R\")}>R</button>\n            <button\n              onClick={() => {\n                if (operation == \"\" && n1 == \"\") {\n                  setN1(\"0.\");\n                }\n\n                if (operation == \"\" && n1 != \"\") {\n                  setN1(n1 + 0);\n                }\n                if (operation != \"\" && n1 != \"\" && equal == \"\") {\n                  setN2(\"0\");\n                }\n\n                if (display == n2 && equal == \"\") {\n                  setN2(n2 + \"0\");\n                }\n                if (display == n2 && equal == \"\" && n2 == \"0\") {\n                  setN2(n2 + \".\" + 0);\n                }\n              }}\n            >\n              0\n            </button>\n            <button\n              onClick={() => {\n                if (operation != \"\" && n1 != \"\" && n2 != \"\") setEqual(\"=\");\n              }}\n            >\n              =\n            </button>\n          </div>\n          <div className=\"operations\">\n            <div>\n              <button\n                onClick={() => {\n                  if (n1 != \"\") setOperation(\"+\");\n                }}\n              >\n                +\n              </button>\n            </div>\n            <div>\n              <button\n                onClick={() => {\n                  if (n1 != \"\") setOperation(\"-\");\n                }}\n              >\n                -\n              </button>\n            </div>\n            <div>\n              <button\n                onClick={() => {\n                  if (n1 != \"\") setOperation(\"x\");\n                }}\n              >\n                x\n              </button>\n            </div>\n            <div>\n              <button\n                onClick={() => {\n                  if (n1 != \"\") setOperation(\"/\");\n                }}\n              >\n                /\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />\n,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}